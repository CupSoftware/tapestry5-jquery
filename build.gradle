description = "Tapestry 5 Jquery Project"
import org.gradle.api.Project

apply plugin: 'java'
apply plugin: "groovy" // mostly for testing
apply plugin: "maven"
apply plugin: "project-report"

apply plugin: 'war'
apply plugin: 'jetty'

// Specific to top-level build, not set for subprojects:
  version = "4.0-rc-1-SNAPSHOT"
  group = "org.got5"

configurations {
   provided
   deployerJars
   binaries // additional dependencies included in the binary archive
}


// See http://jira.codehaus.org/browse/GRADLE-784

  sourceSets {
    main {
      compileClasspath += configurations.provided
    }
    test {
      compileClasspath += configurations.provided
      runtimeClasspath += configurations.provided
    }
  }

Project projectDef = project;




project.ext.versions = [
        tapestryVersion: "5.4-rc-1",
        jetty: "7.6.11.v20130520",
        tomcat: "6.0.30",
        testng: "6.8.21",
        easymock: "3.3.1",
        servletapi: "2.5",
        spock: "1.0-groovy-2.3",
        hibernate: "4.3.6.Final",
        slf4j: "1.7.13",
        geb: "0.10.0",
        selenium: "2.46.0"
]



repositories {
	mavenLocal()
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/staging/"
    }

}

dependencies {
	compile "org.apache.tapestry:tapestry-core:${versions.tapestryVersion}"
    compile "commons-io:commons-io:2.4"
    compile "org.apache.commons:commons-lang3:3.1"

	providedCompile "javax.servlet:servlet-api:2.5"

	testCompile "org.apache.tapestry:tapestry-test:${versions.tapestryVersion}"

	testCompile "org.codehaus.groovy:groovy-all:1.8.6"
    testCompile "org.spockframework:spock-core:${versions.spock}"
	testRuntime "org.slf4j:slf4j-api:1.6.1"
    testRuntime "org.slf4j:slf4j-log4j12:1.6.1"

    testRuntime "org.testng:testng:6.5.2"
    testRuntime "org.seleniumhq.selenium:selenium-java:${versions.selenium}"
    testRuntime "org.seleniumhq.selenium:selenium-server:${versions.selenium}"
    testRuntime "org.eclipse.jetty:jetty-server:${versions.jetty}"

	
	
}

jettyRun {
	dependsOn testClasses
    classpath =  sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
	httpPort = 8080
	webXml = new File("$projectDef.projectDir/src/test/webapp/WEB-INF/web.xml")
	webAppSourceDirectory = new File("$projectDef.projectDir/src/test/webapp")
	
	
}

// Not sure why this is necessary:
compileTestGroovy.dependsOn compileTestJava

test {
		useJUnit()
        maxHeapSize = "400M"
        systemProperties["tapestry.service-reloading-enabled"] = "false"
        jvmArgs("-XX:MaxPermSize=512m")
        logging.captureStandardOutput LogLevel.INFO
        getLogging().setLevel(LogLevel.INFO)
}

task testng(type: Test) { 
     useTestNG() 
     options.suites("src/test/conf/testng.xml")
     maxHeapSize = "400M"
     systemProperties["tapestry.service-reloading-enabled"] = "false"
     jvmArgs("-XX:MaxPermSize=512m")
     logging.captureStandardOutput LogLevel.INFO
     getLogging().setLevel(LogLevel.INFO)
} 

check.dependsOn testng

jar {	

	manifest {	
		attributes 'Tapestry-Module-Classes': 'org.got5.tapestry5.jquery.services.JQueryModule'
		}
 }


